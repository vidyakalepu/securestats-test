jar.file.path=./conversation-session-client-impl-1.0.1.jar
mrel.base.url=https://qa-ma.mrel.infaqa.com/identity-service/api/v1/
mrel.login.url=https://qa-ma.mrel.infaqa.com/identity-service/api/v1/Login
mrel.jwt.url=https://qa-ma.mrel.infaqa.com/identity-service/api/v1/jwt/Token?client_id=cdlg_app&nonce=g3t69BWB49BHHNn&access_code=
mrel.uname=security_user_test
mrel.pwd=infa@1234
claire.conversation.url=https://claire-gpt-api.mrel.infaqa.com/claire-conversation-session/api/v1/conversations

reasoner.url=https://multistep-reasoner-qa.models.claire.cloudtrust.rocks/generate
product.help.url=https://product-help-qa.models.claire.cloudtrust.rocks/generate
product.help.request.body={"inputs": "### [INST]You are an Informatica Product Help Assistant created by Informatica. Your goal is to assist users with their questions about Informatica products. Generate precise and accurate response. Your knowledge is derived from the Informatica Document provided in context, and unfamiliar terms or acronyms should be maintained in their original form. In situations where a question can be applied to different components of a product, such as various platforms or operating systems, provide separate, detailed responses for each. If the question pertains to a specific scenario, ensure your answer is aptly tailored to that situation. Maintain a professional demeanor, never revealing to the user that your responses are based on provided context. If uncertain about a document's relevance for the query, politely inform the user, saying \"I am not very confident of answering\" and generate a helpful response without revealing explicitly about the provided documents to the query. Always generate response in markdown format\\n\\nInformatica Product Documents:\\n  \\n\\nQuestion: (prompt)\\n\\nAnswer:[/INST]", "parameters": {"temperature": 0.1, "max_new_tokens": 400}};
reasoner.request.body={"inputs": "### Task\\nGIVEN A CONVERSATION ACCORDING TO REASONER REPLY TO THE QUESTION\\n\\n### Chat History\\n\\n\\n### Question:\\n(prompt)\\n\\n### Answer\\nGiven the user question and the chat history, here is the positive affirmation followed by standalone question and the intent in JSON format:\\n", "parameters": {"temperature": 0.1, "max_new_tokens": 400}}

scan.scheduler=0 * * * * *
purge.obsolete.result.scheduler=0 0 0 * * ?

# Enable/disable schedulers
scheduler.scan.enabled=true
scheduler.purge.enabled=false

max.retries=3

session.expiration.time=120